<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cdk23</groupId>
  <artifactId>JOUST</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>JOUST</name>
  <url>https://bitbucket.org/ckitching/javac-opt/overview</url>
  <inceptionYear>2013</inceptionYear>
  <description>Java Optimisation Using Syntax Trees</description>

  <!--<scm>
    <connection>scm:hg:https://bitbucket.org/ckitching/javac-opt</connection>
    <developerConnection>scm:hg:ssh://ckitching@bitbucket.org/ckitching/javac-opt</developerConnection>
    <url>https://bitbucket.org/ckitching/javac-opt</url>
  </scm>-->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <!-- Log4j for logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.0-beta9</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.0-beta9</version>
    </dependency>

    <!-- JUnit for unit testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnitParams for making the unit tests slightly less awful... -->
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>

    <!-- The internal javac classes we need. -->
    <dependency>
      <groupId>sun.jdk</groupId>
      <artifactId>tools</artifactId>
      <version>1.8.0</version>
      <scope>system</scope>
      <systemPath>${java.home}/../lib/tools.jar</systemPath>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <source>1.7</source>
            <target>1.7</target>
            <showWarnings>true</showWarnings>
            <!-- Stop the annotation processor from annotation processing the annotation processor -->
            <compilerArgument>-proc:none</compilerArgument>
            <showDeprecation>true</showDeprecation>
            <compilerVersion>1.8</compilerVersion>
        </configuration>
      </plugin>

      <!-- For integration tests. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>tests/integrationtests/*.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Call a shell script to clean up the integration testing environment before a run. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <workingDirectory>${project.build.testOutputDirectory}</workingDirectory>
          <executable>/bin/sh</executable>
          <arguments>
            <argument>${project.build.testOutputDirectory}/pre-integration-test.sh</argument>
          </arguments>
        </configuration>
      </plugin>

      <!-- For unit tests. -->
      <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
      <configuration>
        <includes>
          <include>tests/unittests/*.java</include>
        </includes>
      </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
</project>
